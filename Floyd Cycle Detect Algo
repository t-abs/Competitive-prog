//Algo- Used to detect a loop present in linked list or not.
Initialise with 2 pointers slow and fast.Move fast by 2 steps and slow by 1 step.If fast  meets slow then loop is present if fast reaches null no loop
(The Fast pointer again catches the slow pointer at some time therefore a loop exists in the linked list)
//
Node* floydDetectLoop(Node* head){
if(head==NULL){
return NULL;
}
Node *slow=head;
Node *fast=head;
while(slow!=NULL && fast!=NULL){
fast=fast->next;
if(fast!=NULL){
fast->fast->next;
}
slow->next;
if(slow==fast){
return slow;
}
}
return NULL;
}
