bool bst(BinaryTreeNode<int>* root, int min, int max) 
{
    // An empty tree is a BST
    if (root == NULL) 
    {
        return true;
    }

    // If this node violates the min/max constraint
    if ((root->data <= min) || (root->data >= max)) 
    {
        return false;
    }

    bool leftSearch = bst(root -> left, min, root -> data);
    bool rightSearch = bst(root -> right, root -> data, max);
    
    return leftSearch & rightSearch;
}


bool validateBST(BinaryTreeNode<int>* root) 
{
    return bst(root, INT_MIN, INT_MAX);
}

